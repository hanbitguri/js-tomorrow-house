/*  mobile < 768px
number of columns : 4
size of gutter : 20px
container-size : 100% - 5px*2 ( margin )
margin-size : 5px
fixture : sm
*/

/* 768px < tablet < 1200px  
number of columns : 12
size of gutter : 20px
container-size : 100% - 30px*2 ( margin )
max-container-size : 960px
margin-size : 30px
fixture : md
*/

/* 1200px < desktop
number of columns : 12
unit-size : 75px
size of gutter : 20px
container-size : 1140px
max-container-size : 1140px
margin-size : auto
fixture : lg
*/
$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns;

.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto; // 사이즈 커지면 고정값이라 마진 더 생김 그래서 ,정 중앙 배치

  .row {
    display: flex;
    flex-wrap: wrap; // no-warp : 한줄에 구겨넣음
  }

  [class^='col-'] {
    padding: 0 $gutter/2;
  }

  @for $i from 1 through $sm-columns {
    .col-sm-#{$i} {
      width: percentage($i / $sm-columns);
    }
  }

  @include responsive(T) {
    max-width: $md-max-container;
    padding: 0 $md-margin;
    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage($i / $md-columns);
      }
    }
  }
  @include responsive(D) {
    max-width: $lg-max-container;
    padding: 0;
    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
